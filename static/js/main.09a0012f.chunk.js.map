{"version":3,"sources":["components/signup.js","components/login.js","App.js","serviceWorker.js","index.js"],"names":["initialtState","Firstname","Surname","Companyname","Companyemail","Companyaddress","Confirmemail","Password","Postcode","Companywebpagelink","LinkedInlink","Instagramlink","Industry","Role","FirstnameError","SurnameError","CompanynameError","CompanyemailError","CompanyaddressError","ConfirmemailError","PasswordError","PostcodeError","CompanywebpagelinkError","LinkedInlinkError","InstagramlinkError","IndustryError","RoleError","Signup","state","handleChange","event","console","log","target","value","setState","name","validate","isError","handleSubmit","preventDefault","input","border","Fragment","Navbar","style","backgroundColor","Brand","className","Container","Form","onSubmit","this","Row","Col","xs","md","Control","placeholder","onChange","PhoneInput","PhoneInputError","as","Check","type","label","sm","Button","variant","React","Component","Login","id","custom","textAlign","to","App","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.09a0012f.chunk.js","sourcesContent":["import React from 'react';\r\n// import PhoneInput from \"react-phone-input-2\";\r\nimport { Navbar, Form, Row, Col, Button, Container } from 'react-bootstrap';\r\nimport '../index.css'\r\nconst initialtState = {\r\n    Firstname: \"\",\r\n    Surname: \"\",\r\n    Companyname: \"\",\r\n    Companyemail: \"\",\r\n    Companyaddress: \"\",\r\n    Confirmemail: \"\",\r\n    Password: \"\",\r\n    Postcode: \"\",\r\n    Companywebpagelink: \"\",\r\n    LinkedInlink: \"\",\r\n    Instagramlink: \"\",\r\n    Industry: \"\",\r\n    Role: \"\",\r\n    FirstnameError: \"\",\r\n    SurnameError: \"\",\r\n    CompanynameError: \"\",\r\n    CompanyemailError: \"\",\r\n    CompanyaddressError: \"\",\r\n    ConfirmemailError: \"\",\r\n    PasswordError: \"\",\r\n    PostcodeError: \"\",\r\n    CompanywebpagelinkError: \"\",\r\n    LinkedInlinkError: \"\",\r\n    InstagramlinkError: \"\",\r\n    IndustryError: \"\",\r\n    RoleError: \"\"\r\n};\r\nclass Signup extends React.Component {\r\n\r\n\r\n    state = initialtState\r\n\r\n    handleChange = event => {\r\n        console.log(event.target.value)\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    validate = () => {\r\n        let isError = false;\r\n        let FirstnameError = \"\"\r\n        let SurnameError= \"\"\r\n        let CompanynameError= \"\"\r\n        let CompanyemailError= \"\"\r\n        let CompanyaddressError= \"\"\r\n        let ConfirmemailError= \"\"\r\n        let PasswordError= \"\"\r\n        let PostcodeError= \"\"\r\n        let CompanywebpagelinkError= \"\"\r\n        let LinkedInlinkError= \"\"\r\n        let InstagramlinkError= \"\"\r\n        let IndustryError= \"\"\r\n        let RoleError= \"\"\r\n        if (!this.state.Firstname) {\r\n            FirstnameError = \"*This field is required\"\r\n        }else{\r\n            FirstnameError = \"\"\r\n            this.setState({ FirstnameError })\r\n        }\r\n        if (!this.state.Surname) {\r\n            SurnameError = \"*This field is required\"\r\n        }else{\r\n            SurnameError = \"\"\r\n            this.setState({ SurnameError })\r\n        }\r\n        if (!this.state.Companyaddress) {\r\n            CompanyaddressError = \"*This field is required\"\r\n        }else{\r\n            CompanyaddressError = \"\"\r\n            this.setState({ CompanyaddressError })\r\n        }\r\n        if (!this.state.Companyname) {\r\n            CompanynameError = \"*This field is required\"\r\n        }else{\r\n            CompanynameError = \"\"\r\n            this.setState({ CompanynameError })\r\n        }\r\n        if (!this.state.Companyemail) {\r\n            CompanyemailError = \"*This field is required\"\r\n        }else{\r\n            CompanyemailError = \"\"\r\n            this.setState({ CompanyemailError })\r\n        }\r\n        if (!this.state.Confirmemail) {\r\n            ConfirmemailError = \"*This field is required\"\r\n        }else{\r\n            ConfirmemailError = \"\"\r\n            this.setState({ ConfirmemailError })\r\n        }\r\n        if (!this.state.Password) {\r\n            PasswordError = \"*This field is required\"\r\n        }else{\r\n            PasswordError = \"\"\r\n            this.setState({ PasswordError })\r\n        }\r\n        if (!this.state.Postcode) {\r\n            PostcodeError = \"*This field is required\"\r\n        }else{\r\n            PostcodeError = \"\"\r\n            this.setState({ PostcodeError })\r\n        }\r\n        if (!this.state.Companywebpagelink) {\r\n            CompanywebpagelinkError = \"*This field is required\"\r\n        }else{\r\n            CompanywebpagelinkError = \"\"\r\n            this.setState({ CompanywebpagelinkError })\r\n        }\r\n        if (!this.state.LinkedInlink) {\r\n            LinkedInlinkError = \"*This field is required\"\r\n        }else{\r\n            LinkedInlinkError = \"\"\r\n            this.setState({ LinkedInlinkError })\r\n        }\r\n        if (!this.state.Instagramlink) {\r\n            InstagramlinkError = \"*This field is required\"\r\n        }else{\r\n            InstagramlinkError = \"\"\r\n            this.setState({ InstagramlinkError })\r\n        }\r\n        if (!this.state.Industry) {\r\n            IndustryError = \"*This field is required\"\r\n        }else{\r\n            IndustryError = \"\"\r\n            this.setState({ IndustryError })\r\n        }\r\n        if (!this.state.Role) {\r\n            RoleError = \"*This field is required\"\r\n        }else{\r\n            RoleError = \"\"\r\n            this.setState({ RoleError })\r\n        }\r\n        if (FirstnameError) {\r\n            this.setState({ FirstnameError })\r\n            isError = true\r\n        } if (SurnameError) {\r\n            this.setState({ SurnameError })\r\n            isError = true\r\n        } if (CompanynameError) {\r\n            this.setState({ CompanynameError })\r\n            isError = true\r\n        } if (CompanyemailError) {\r\n            this.setState({ CompanyemailError })\r\n            isError = true\r\n        } if (CompanyaddressError) {\r\n            this.setState({ CompanyaddressError })\r\n            isError = true\r\n        } if (ConfirmemailError) {\r\n            this.setState({ ConfirmemailError })\r\n            isError = true\r\n        } if (PasswordError) {\r\n            this.setState({ PasswordError })\r\n            isError = true\r\n        } if (PostcodeError) {\r\n            this.setState({ PostcodeError })\r\n            isError = true\r\n        } if (CompanywebpagelinkError) {\r\n            this.setState({ CompanywebpagelinkError })\r\n            isError = true\r\n        } if (LinkedInlinkError) {\r\n            this.setState({ LinkedInlinkError })\r\n            isError = true\r\n        } if (InstagramlinkError) {\r\n            this.setState({ InstagramlinkError })\r\n            isError = true\r\n        }\r\n        if (IndustryError) {\r\n            this.setState({ IndustryError })\r\n            isError = true\r\n        }\r\n        if (RoleError) {\r\n            this.setState({ RoleError })\r\n            isError = true\r\n        }\r\n\r\n        if(isError == true){\r\n            return false;\r\n        }else{\r\n            return true;\r\n        }\r\n        \r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        const isValid = this.validate();\r\n        if (isValid) {\r\n            console.log(this.state)\r\n            this.setState(initialtState)\r\n        }\r\n    }\r\n    render() {\r\n\r\n        const input = {\r\n            border: \"1px solid #f75011\"\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                <Navbar style={{ backgroundColor: \"#f75011\" }}>\r\n                    <Navbar.Brand className=\"font-weight-bold text-white\">JOIN NOW</Navbar.Brand>\r\n                </Navbar>\r\n                <div>\r\n\r\n                    <Container className=\"mt-5\">\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Row className=\"mb-2\">\r\n                                <Col xs={12} md={4}>\r\n                                    <Form.Control style={input} name=\"Firstname\" placeholder=\"First name\"\r\n                                        value={this.state.Firstname}\r\n                                        onChange={this.handleChange} />\r\n                                    <div className=\"errormsg\">{this.state.FirstnameError}</div>\r\n                                </Col>\r\n                                <Col xs={12} md={4}>\r\n                                    <Form.Control style={input} placeholder=\"Surname\" name=\"Surname\"\r\n                                    value={this.state.Surname}\r\n                                    onChange={this.handleChange} />\r\n                                    <div className=\"errormsg\">{this.state.SurnameError}</div>\r\n                                </Col>\r\n                                <Col xs={12} md={4}>\r\n                                    <Form.Control style={input} placeholder=\"Company name\" \r\n                                    name=\"Companyname\"\r\n                                    value={this.state.Companyname}\r\n                                    onChange={this.handleChange}/>\r\n                                    <div className=\"errormsg\">{this.state.CompanynameError}</div>\r\n                                </Col>\r\n                            </Row><Row className=\"mb-2\">\r\n                                <Col xs={12} md={4}>\r\n                                    <Form.Control style={input} placeholder=\"Company email\"\r\n                                    name=\"Companyemail\"\r\n                                    value={this.state.Companyemail}\r\n                                    onChange={this.handleChange} />\r\n                                    <div className=\"errormsg\">{this.state.CompanyemailError}</div>\r\n                                </Col>\r\n                                <Col xs={12} md={4}>\r\n                                    <Form.Control style={input} placeholder=\"Confirm email\"\r\n                                    name=\"Confirmemail\"\r\n                                    value={this.state.Confirmemail}\r\n                                    onChange={this.handleChange} />\r\n                                    <div className=\"errormsg\">{this.state.ConfirmemailError}</div>\r\n                                </Col>\r\n                                <Col xs={12} md={4}>\r\n                                    <Form.Control style={input} placeholder=\"Password\"\r\n                                    name=\"Password\"\r\n                                    value={this.state.Password}\r\n                                    onChange={this.handleChange} />\r\n                                    <div className=\"errormsg\">{this.state.PasswordError}</div>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"mb-2\">\r\n                                <Col xs={12} md={4}>\r\n                                    <Form.Control style={input} placeholder=\"Company address\"\r\n                                    name=\"Companyaddress\"\r\n                                    value={this.state.Companyaddress}\r\n                                    onChange={this.handleChange} />\r\n                                    <div className=\"errormsg\">{this.state.CompanyaddressError}</div>\r\n                                </Col>\r\n                                <Col xs={12} md={4}>\r\n                                    <div>\r\n                                    <Form.Control style={input} placeholder=\"+1\" \r\n                                    name=\"Phone\"\r\n                                    value={this.state.PhoneInput}\r\n                                    onChange={this.handleChange} />\r\n                                        {/* <PhoneInput\r\n                                            inputStyle={input}\r\n                                            country={'us'}\r\n                                        /> */}\r\n                                        <div className=\"errormsg\">{this.state.PhoneInputError}</div>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col xs={12} md={4}>\r\n                                    <Form.Control style={input} placeholder=\"Zip / Post code\"\r\n                                    name=\"Postcode\"\r\n                                    value={this.state.Postcode}\r\n                                    onChange={this.handleChange} />\r\n                                    <div className=\"errormsg\">{this.state.PostcodeError}</div>\r\n                                </Col>\r\n                            </Row><Row className=\"mb-2\">\r\n                                <Col xs={12} md={4}>\r\n                                    <Form.Control style={input} placeholder=\"Company webpage link\" \r\n                                    name=\"Companywebpagelink\"\r\n                                    value={this.state.Companywebpagelink}\r\n                                    onChange={this.handleChange} />\r\n                                    <div className=\"errormsg\">{this.state.CompanywebpagelinkError}</div>\r\n                                </Col>\r\n                                <Col xs={12} md={4}>\r\n                                    <Form.Control style={input} placeholder=\"LinkedIn link\" \r\n                                    name=\"LinkedInlink\"\r\n                                    value={this.state.LinkedInlink}\r\n                                    onChange={this.handleChange} />\r\n                                    <div className=\"errormsg\">{this.state.LinkedInlinkError}</div>\r\n                                </Col>\r\n                                <Col xs={12} md={4}>\r\n                                    <Form.Control style={input} placeholder=\"Instagram link\" \r\n                                    name=\"Instagramlink\"\r\n                                    value={this.state.Instagramlink}\r\n                                    onChange={this.handleChange} />\r\n                                    <div className=\"errormsg\">{this.state.InstagramlinkError}</div>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"mb-2\">\r\n                                <Col xs={12} md={4}>\r\n                                    <Form.Control as=\"select\" style={input}\r\n                                    name=\"Industry\"\r\n                                    value={this.state.Industry}\r\n                                    onChange={this.handleChange}>\r\n                                        <option value=\"\">Industry</option>\r\n                                        <option value=\"1\" >1</option>\r\n                                        <option value=\"2\" >2</option>\r\n                                        <option value=\"3\" >3</option>\r\n                                    </Form.Control>\r\n                                    <div className=\"errormsg\">{this.state.IndustryError}</div>\r\n                                </Col>\r\n                                <Col xs={12} md={4}>\r\n                                    <Form.Control as=\"select\" style={input}\r\n                                    name=\"Role\"\r\n                                    value={this.state.Role}\r\n                                    onChange={this.handleChange}>\r\n                                         <option value=\"\">Your Role</option>\r\n                                        <option value=\"1\" >1</option>\r\n                                        <option value=\"2\" >2</option>\r\n                                        <option value=\"3\" >3</option>\r\n                                    </Form.Control>\r\n                                    <div className=\"errormsg\">{this.state.RoleError}</div>\r\n\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"mb-2\">\r\n                                <Col>\r\n                                    <Form.Check\r\n                                        type='checkbox'\r\n                                        label={`I have read and I accepted the Privacy Policy and the License Agreement`}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"mb-2\">\r\n                                <Col sm={5}>\r\n                                </Col>\r\n                                <Col sm={2}>\r\n                                    <Button variant=\"secondary\" type=\"submit\">\r\n                                        Submit\r\n                            </Button>\r\n                                </Col>\r\n                                <Col sm={5}>\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n                        </Form>\r\n                    </Container>\r\n\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Signup;\r\n","import React from 'react';\r\nimport { Navbar, Form, Row, Col, Button, Container } from 'react-bootstrap';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\nimport '../index.css'\r\nimport Signup from './signup'\r\nclass Login extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid h-100\">\r\n                <Row className=\"h-100\">\r\n                    <Col className=\"d-none d-md-block d-lg-block\" md={6} id=\"yellow\"></Col>\r\n                    <Col xs={12} md={6} >\r\n                        <Container className=\"cont-sign-in\">\r\n                                    <Form>\r\n                                        <p className=\"h5 text-center mb-4\" style={{backgroundColor:\"1ps solid #f75011\"}}>Sign In</p>\r\n                                        <div className=\"grey-text\">\r\n                                            <Form.Control className=\"inp-bdr mb-3\"  name=\"Username\" placeholder=\"Username\" />\r\n                                            <Form.Control type=\"password\" className=\"inp-bdr mb-3\"  name=\"Password\" placeholder=\"Password\" />\r\n                                        </div>\r\n                                        <Row>\r\n                                            <Col>\r\n                                            <Form.Check\r\n                                                custom\r\n                                                type='checkbox'\r\n                                                className=\"fanc-check\"\r\n                                                label={`Remember me`}\r\n                                            />\r\n                                            </Col>\r\n                                            <Col style={{textAlign: \"Right\"}}>\r\n                                            <label>\r\n                                                Forget Password?\r\n                                            </label>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Button className=\"loginBtn\">Sign in</Button>\r\n                                        <label className=\"loginOr\">Or</label>\r\n                                        <Link to=\"/signup\">\r\n                                        <Button className=\"signupBtn\">\r\n                                            Sign Up\r\n                                        </Button></Link>\r\n                                \r\n                                        \r\n                                    </Form>\r\n                        </Container>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n          \r\n        );\r\n    };\r\n}\r\n\r\nexport default Login;","import React from 'react';\nimport Signup from './components/signup'\nimport Login from './components/login'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport './index.css'\nfunction App() {\n  return (\n  <Router>\n    <React.Fragment>\n    <Switch>\n          <Route path=\"/login\">\n             <Login />\n          </Route>\n          <Route path=\"/signup\">\n            <Signup />\n          </Route>\n          <Route path=\"/\">\n            <Login />\n          </Route>\n        </Switch>\n    </React.Fragment>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}